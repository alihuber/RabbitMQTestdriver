package org.rabbitmqtestdriver;

import java.awt.Color;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabPane = new javax.swing.JTabbedPane();
        settingsPanel = new javax.swing.JPanel();
        ipAddressLabel = new javax.swing.JLabel();
        ipAddressTextField = new javax.swing.JTextField();
        vHostNameTextField = new javax.swing.JTextField();
        vHostNameLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        saveSettingsButton = new javax.swing.JButton();
        smokeTestPanel = new javax.swing.JPanel();
        smokeTestQueueNameLabel = new javax.swing.JLabel();
        smokeTestQueueNameTextField = new javax.swing.JTextField();
        smokeTestMessageTextLabel = new javax.swing.JLabel();
        smokeTestMessageTextTextField = new javax.swing.JTextField();
        smokeTestSendButton = new javax.swing.JButton();
        smokeTestFloodButton = new javax.swing.JButton();
        smokeTestFloodSpinner = new javax.swing.JSpinner();
        smokeTestSingleLabel = new javax.swing.JLabel();
        smokeTestFloodLabel = new javax.swing.JLabel();
        topicsPanel = new javax.swing.JPanel();
        topicsDebugInfoTextField = new javax.swing.JTextField();
        topicsDebugInfoLabel = new javax.swing.JLabel();
        topicsDebugWarningLabel = new javax.swing.JLabel();
        topicsDebugWarningTextField = new javax.swing.JTextField();
        topicsLoggerInfoLabel = new javax.swing.JLabel();
        topicsLoggerInfoTextField = new javax.swing.JTextField();
        topicsSendButton = new javax.swing.JButton();
        statusPanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainTabPane.setName("SmokeTestTab"); // NOI18N

        ipAddressLabel.setText("Broker IP Address");

        ipAddressTextField.setName(""); // NOI18N

        vHostNameLabel.setText("VHost Name");

        usernameLabel.setText("Username");

        passwordLabel.setText("Password");

        saveSettingsButton.setText("Save");
        saveSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ipAddressLabel)
                            .addComponent(vHostNameLabel)
                            .addComponent(usernameLabel)
                            .addComponent(passwordLabel))
                        .addGap(18, 18, 18)
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameTextField)
                            .addComponent(vHostNameTextField)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                            .addComponent(ipAddressTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveSettingsButton)))
                .addContainerGap())
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipAddressLabel)
                    .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vHostNameLabel)
                    .addComponent(vHostNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(saveSettingsButton)
                .addContainerGap())
        );

        mainTabPane.addTab("Settings", settingsPanel);

        smokeTestQueueNameLabel.setText("Queue Name");

        smokeTestMessageTextLabel.setText("Message Text");

        smokeTestSendButton.setText("Send");
        smokeTestSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smokeTestSendButtonActionPerformed(evt);
            }
        });

        smokeTestFloodButton.setText("Flood");
        smokeTestFloodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smokeTestFloodButtonActionPerformed(evt);
            }
        });

        smokeTestFloodSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10000, 1));

        smokeTestSingleLabel.setText("Send single message");

        smokeTestFloodLabel.setText("Send # random messages");

        javax.swing.GroupLayout smokeTestPanelLayout = new javax.swing.GroupLayout(smokeTestPanel);
        smokeTestPanel.setLayout(smokeTestPanelLayout);
        smokeTestPanelLayout.setHorizontalGroup(
            smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smokeTestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smokeTestPanelLayout.createSequentialGroup()
                        .addComponent(smokeTestSendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(smokeTestFloodSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(smokeTestFloodButton))
                    .addGroup(smokeTestPanelLayout.createSequentialGroup()
                        .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(smokeTestMessageTextLabel)
                            .addComponent(smokeTestQueueNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(smokeTestMessageTextTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(smokeTestQueueNameTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smokeTestPanelLayout.createSequentialGroup()
                        .addComponent(smokeTestSingleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                        .addComponent(smokeTestFloodLabel)))
                .addContainerGap())
        );
        smokeTestPanelLayout.setVerticalGroup(
            smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smokeTestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smokeTestQueueNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(smokeTestQueueNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smokeTestMessageTextLabel)
                    .addComponent(smokeTestMessageTextTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smokeTestFloodLabel)
                    .addComponent(smokeTestSingleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(smokeTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smokeTestFloodButton)
                    .addComponent(smokeTestFloodSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(smokeTestSendButton))
                .addGap(5, 5, 5))
        );

        mainTabPane.addTab("Smoke Test", smokeTestPanel);

        topicsDebugInfoLabel.setText("Message for log.debug.info");

        topicsDebugWarningLabel.setText("Message for log.debug.warning");

        topicsLoggerInfoLabel.setText("Message for log.logger.info");

        topicsSendButton.setText("Send");
        topicsSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicsSendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topicsPanelLayout = new javax.swing.GroupLayout(topicsPanel);
        topicsPanel.setLayout(topicsPanelLayout);
        topicsPanelLayout.setHorizontalGroup(
            topicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topicsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topicsDebugInfoTextField)
                    .addComponent(topicsDebugWarningTextField)
                    .addGroup(topicsPanelLayout.createSequentialGroup()
                        .addGroup(topicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(topicsDebugInfoLabel)
                            .addComponent(topicsDebugWarningLabel)
                            .addComponent(topicsLoggerInfoLabel))
                        .addGap(0, 279, Short.MAX_VALUE))
                    .addComponent(topicsLoggerInfoTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topicsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(topicsSendButton)))
                .addContainerGap())
        );
        topicsPanelLayout.setVerticalGroup(
            topicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topicsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(topicsDebugInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topicsDebugInfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topicsDebugWarningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topicsDebugWarningTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topicsLoggerInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topicsLoggerInfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(topicsSendButton)
                .addContainerGap())
        );

        mainTabPane.addTab("Topics", topicsPanel);

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void smokeTestSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smokeTestSendButtonActionPerformed
        if ("Send".equals(evt.getActionCommand())) {
            String queueName = smokeTestQueueNameTextField.getText();
            String message = smokeTestMessageTextTextField.getText();
            try {
                SmokeTest smokeTest = new SmokeTest(Main.brokerConnection,
                        queueName, message);
                String returnMessage = smokeTest.sendSingleMessage();
                setStatusLabelText(returnMessage);
            } catch (Exception ex) {
                setStatusLabelErrorMessage(ex.getMessage());
            }
        }
    }//GEN-LAST:event_smokeTestSendButtonActionPerformed

    private void saveSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsButtonActionPerformed
        if (evt.getActionCommand().equals("Save")) {
            String hostname = this.ipAddressTextField.getText();
            if(hostname.isEmpty()) {
                setStatusLabelErrorMessage("Broker address is empty");
                return;
            }
            String vhostName = this.vHostNameTextField.getText();
            if(vhostName.isEmpty()) {
                setStatusLabelErrorMessage("Virtual host name is empty");
                return;
            }
            String username = this.usernameTextField.getText();
            if(username.isEmpty()) {
                setStatusLabelErrorMessage("Username is empty");
                return;
            }
            char[] password;
            password = this.passwordTextField.getPassword();
            if(String.valueOf(password).isEmpty()) {
                setStatusLabelErrorMessage("Password is empty");
                return;
            }
            Main.brokerConnection = new BrokerConnection(hostname, vhostName, username, password);
            setStatusLabelText("Broker connection configured");
        }
    }//GEN-LAST:event_saveSettingsButtonActionPerformed

    private void smokeTestFloodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smokeTestFloodButtonActionPerformed
        if (evt.getActionCommand().equals("Flood")) {
            String queueName = this.smokeTestQueueNameTextField.getText();
            int amount;
            amount = (int) this.smokeTestFloodSpinner.getValue();
            boolean bulkReturn = false;
            try {
                SmokeTest smokeTest = new SmokeTest(Main.brokerConnection, queueName);
                bulkReturn = smokeTest.sendBulkMessages(amount);
            } catch (Exception ex) {
                setStatusLabelErrorMessage(ex.getMessage());
            }
            if (bulkReturn) {
                setStatusLabelText("Done sending messages");
            }
        }
    }//GEN-LAST:event_smokeTestFloodButtonActionPerformed

    private void topicsSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicsSendButtonActionPerformed
        if (evt.getActionCommand().equals("Send")) {
            String debugInfoMessage = this.topicsDebugInfoTextField.getText();
            String debugWarningMessage = this.topicsDebugWarningTextField.getText();
            String loggerInfoMessage = this.topicsLoggerInfoTextField.getText();
            try {
                Topic topic = new Topic(Main.brokerConnection, debugInfoMessage,
                    debugWarningMessage, loggerInfoMessage);
                String returnMessage = topic.sendTopicMessages();
                setStatusLabelText(returnMessage);
            } catch (Exception ex) {
                setStatusLabelErrorMessage(ex.getMessage());
            }
        }
    }//GEN-LAST:event_topicsSendButtonActionPerformed

    private void setStatusLabelErrorMessage(String errorMessage) {
        this.statusLabel.setForeground(Color.red);
        String truncatedError;
        truncatedError = errorMessage.substring(0, Math.min(errorMessage.length(), 50));
        if (errorMessage.length() > 50) {
            this.statusLabel.setText(truncatedError + "...");
        } else {
            this.statusLabel.setText(errorMessage);
        }
    }
    
    private void setStatusLabelText(String message) {
        this.statusLabel.setForeground(Color.black);
        this.statusLabel.setText(message);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ipAddressLabel;
    private javax.swing.JTextField ipAddressTextField;
    private javax.swing.JTabbedPane mainTabPane;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton saveSettingsButton;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JButton smokeTestFloodButton;
    private javax.swing.JLabel smokeTestFloodLabel;
    private javax.swing.JSpinner smokeTestFloodSpinner;
    private javax.swing.JLabel smokeTestMessageTextLabel;
    private javax.swing.JTextField smokeTestMessageTextTextField;
    private javax.swing.JPanel smokeTestPanel;
    private javax.swing.JLabel smokeTestQueueNameLabel;
    private javax.swing.JTextField smokeTestQueueNameTextField;
    private javax.swing.JButton smokeTestSendButton;
    private javax.swing.JLabel smokeTestSingleLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel topicsDebugInfoLabel;
    private javax.swing.JTextField topicsDebugInfoTextField;
    private javax.swing.JLabel topicsDebugWarningLabel;
    private javax.swing.JTextField topicsDebugWarningTextField;
    private javax.swing.JLabel topicsLoggerInfoLabel;
    private javax.swing.JTextField topicsLoggerInfoTextField;
    private javax.swing.JPanel topicsPanel;
    private javax.swing.JButton topicsSendButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel vHostNameLabel;
    private javax.swing.JTextField vHostNameTextField;
    // End of variables declaration//GEN-END:variables
}
